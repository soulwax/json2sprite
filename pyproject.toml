[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "json2sprite"
version = "0.1.0"
description = "A tool to convert JSON sprite descriptions into PNG images and spritesheets"
readme = "README.md"
authors = [
    {name = "Soulwax", email = "your.email@example.com"}
]
license = {text = "AGPL-3.0-or-later"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["sprite", "pixel-art", "graphics", "spritesheet", "game-development"]
requires-python = ">=3.8"
dependencies = [
    "pillow>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "pylint>=2.17.0",
    "mypy>=1.4.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/soulwax/json2sprite"
Repository = "https://github.com/soulwax/json2sprite"
"Bug Tracker" = "https://github.com/soulwax/json2sprite/issues"

[project.scripts]
json2sprite = "json2sprite.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.eggs
  | \.tox
  | build
  | dist
)/
'''

[tool.pylint.messages_control]
max-line-length = 100
disable = [
    "C0103",  # Invalid name
    "R0913",  # Too many arguments
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=json2sprite --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.coverage.run]
source = ["src/json2sprite"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]